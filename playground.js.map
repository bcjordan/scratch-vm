{"version":3,"file":"playground.js","sources":["webpack://VirtualMachine/webpack/bootstrap","webpack://VirtualMachine/./src/playground/playground.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 471);\n","const Scratch = window.Scratch = window.Scratch || {};\n\nconst ASSET_SERVER = 'https://cdn.assets.scratch.mit.edu/';\nconst PROJECT_SERVER = 'https://cdn.projects.scratch.mit.edu/';\n\nconst loadProject = function () {\n    let id = location.hash.substring(1);\n    if (id.length < 1 || !isFinite(id)) {\n        id = '119615668';\n    }\n    Scratch.vm.downloadProjectId(id);\n};\n\n/**\n * @param {Asset} asset - calculate a URL for this asset.\n * @returns {string} a URL to download a project file.\n */\nconst getProjectUrl = function (asset) {\n    const assetIdParts = asset.assetId.split('.');\n    const assetUrlParts = [PROJECT_SERVER, 'internalapi/project/', assetIdParts[0], '/get/'];\n    if (assetIdParts[1]) {\n        assetUrlParts.push(assetIdParts[1]);\n    }\n    return assetUrlParts.join('');\n};\n\n/**\n * @param {Asset} asset - calculate a URL for this asset.\n * @returns {string} a URL to download a project asset (PNG, WAV, etc.)\n */\nconst getAssetUrl = function (asset) {\n    const assetUrlParts = [\n        ASSET_SERVER,\n        'internalapi/asset/',\n        asset.assetId,\n        '.',\n        asset.dataFormat,\n        '/get/'\n    ];\n    return assetUrlParts.join('');\n};\n\nconst addProfilerPanels = function (\n    stats, vm, panelName = 'BLK%', panelFg = '#fff', panelBg = '#111') {\n\n    vm.runtime.enableProfiling();\n    if (vm.runtime.profiler === null) {\n        // Profiler isn't available on the local system.\n        return;\n    }\n\n    const blockPercentPanel = stats.addPanel(new window.Stats.Panel(panelName, panelFg, panelBg));\n\n    // Store the profiler reference for later.\n    const profiler = vm.runtime.profiler;\n    // Set profiler to null to disable profiling until later.\n    vm.runtime.profiler = null;\n\n    const stepThreadsProfilerId = profiler.idByName('Sequencer.stepThreads');\n    const blockFunctionProfilerId = profiler.idByName('blockFunction');\n\n    let blockFunctionTime = 0;\n    const stepValues = [];\n    let lastUpdate = Date.now();\n\n    // Collect time used by `blockFunction` calls in `execute` and add a column\n    // to the stats graph of the average for the last second of recordings.\n    profiler.onFrame = function ({id, totalTime}) {\n        if (id === stepThreadsProfilerId && totalTime > 0) {\n            // This frame wraps Sequencer.stepThreads.\n\n            // Push the most recently summed blockFunctionTime.\n            stepValues.push(blockFunctionTime / totalTime * 100);\n            // Every second, average the pushed values and render that as a new\n            // column in the stats graph.\n            if (Date.now() - lastUpdate > 1000) {\n                lastUpdate = Date.now();\n                const average = stepValues.reduce(\n                    (a, b) => a + b,\n                    0) / stepValues.length;\n                blockPercentPanel.update(average, 100);\n                stepValues.length = 0;\n            }\n            blockFunctionTime = 0;\n        } else if (id === blockFunctionProfilerId) {\n            // This frame wraps around each blockFunction call.\n            blockFunctionTime += totalTime;\n        }\n    };\n\n    // Set the stats panel to not display by default.\n    blockPercentPanel.dom.style.display = 'none';\n\n    // When the parent of the stats graphs is clicked, check if the\n    // blockPercentPanel is visible. If it is visible, enable profiling by\n    // setting the runtime's profiler to the stored Profiler instance. If it is\n    // not visible, disable profiling by setting the profiler to null.\n    stats.dom.addEventListener('click', () => {\n        if (blockPercentPanel.dom.style.display === 'block') {\n            vm.runtime.profiler = profiler;\n        } else {\n            vm.runtime.profiler = null;\n        }\n    });\n\n    return blockPercentPanel;\n};\n\nwindow.onload = function () {\n    // Lots of global variables to make debugging easier\n    // Instantiate the VM.\n    const vm = new window.VirtualMachine();\n    Scratch.vm = vm;\n\n    const storage = new ScratchStorage(); /* global ScratchStorage */\n    const AssetType = storage.AssetType;\n    storage.addWebSource([AssetType.Project], getProjectUrl);\n    storage.addWebSource([AssetType.ImageVector, AssetType.ImageBitmap, AssetType.Sound], getAssetUrl);\n    vm.attachStorage(storage);\n\n    // Loading projects from the server.\n    document.getElementById('projectLoadButton').onclick = function () {\n        document.location = `#${document.getElementById('projectId').value}`;\n        location.reload();\n    };\n    loadProject();\n\n    // Instantiate the renderer and connect it to the VM.\n    const canvas = document.getElementById('scratch-stage');\n    const renderer = new window.RenderWebGL(canvas);\n    Scratch.renderer = renderer;\n    vm.attachRenderer(renderer);\n    const audioEngine = new window.AudioEngine();\n    vm.attachAudioEngine(audioEngine);\n\n    // Instantiate scratch-blocks and attach it to the DOM.\n    const workspace = window.Blockly.inject('blocks', {\n        media: './media/',\n        zoom: {\n            controls: true,\n            wheel: true,\n            startScale: 0.75\n        },\n        colours: {\n            workspace: '#334771',\n            flyout: '#283856',\n            scrollbar: '#24324D',\n            scrollbarHover: '#0C111A',\n            insertionMarker: '#FFFFFF',\n            insertionMarkerOpacity: 0.3,\n            fieldShadow: 'rgba(255, 255, 255, 0.3)',\n            dragShadowOpacity: 0.6\n        }\n    });\n    Scratch.workspace = workspace;\n\n    // Attach scratch-blocks events to VM.\n    workspace.addChangeListener(vm.blockListener);\n    workspace.addChangeListener(vm.variableListener);\n    const flyoutWorkspace = workspace.getFlyout().getWorkspace();\n    flyoutWorkspace.addChangeListener(vm.flyoutBlockListener);\n    flyoutWorkspace.addChangeListener(vm.monitorBlockListener);\n\n    // Create FPS counter.\n    const stats = new window.Stats();\n    document.getElementById('tab-renderexplorer').appendChild(stats.dom);\n    stats.dom.style.position = 'relative';\n    addProfilerPanels(stats, vm, 'BLK%', '#fff', '#111');\n    stats.begin();\n\n    // Playground data tabs.\n    // Block representation tab.\n    const blockexplorer = document.getElementById('blockexplorer');\n    const updateBlockExplorer = function (blocks) {\n        blockexplorer.innerHTML = JSON.stringify(blocks, null, 2);\n        window.hljs.highlightBlock(blockexplorer);\n    };\n\n    // Thread representation tab.\n    const threadexplorer = document.getElementById('threadexplorer');\n    let cachedThreadJSON = '';\n    const updateThreadExplorer = function (newJSON) {\n        if (newJSON !== cachedThreadJSON) {\n            cachedThreadJSON = newJSON;\n            threadexplorer.innerHTML = cachedThreadJSON;\n            window.hljs.highlightBlock(threadexplorer);\n        }\n    };\n\n    // Only request data from the VM thread if the appropriate tab is open.\n    Scratch.exploreTabOpen = false;\n    const getPlaygroundData = function () {\n        vm.getPlaygroundData();\n        if (Scratch.exploreTabOpen) {\n            window.requestAnimationFrame(getPlaygroundData);\n        }\n    };\n\n    // VM handlers.\n    // Receipt of new playground data (thread, block representations).\n    vm.on('playgroundData', data => {\n        updateThreadExplorer(data.threads);\n        updateBlockExplorer(data.blocks);\n    });\n\n    // Receipt of new block XML for the selected target.\n    vm.on('workspaceUpdate', data => {\n        workspace.clear();\n        const dom = window.Blockly.Xml.textToDom(data.xml);\n        window.Blockly.Xml.domToWorkspace(dom, workspace);\n    });\n\n    // Receipt of new list of targets, selected target update.\n    const selectedTarget = document.getElementById('selectedTarget');\n    vm.on('targetsUpdate', data => {\n        // Clear select box.\n        while (selectedTarget.firstChild) {\n            selectedTarget.removeChild(selectedTarget.firstChild);\n        }\n        // Generate new select box.\n        for (let i = 0; i < data.targetList.length; i++) {\n            const targetOption = document.createElement('option');\n            targetOption.setAttribute('value', data.targetList[i].id);\n            // If target id matches editingTarget id, select it.\n            if (data.targetList[i].id === data.editingTarget) {\n                targetOption.setAttribute('selected', 'selected');\n            }\n            targetOption.appendChild(\n                document.createTextNode(data.targetList[i].name)\n            );\n            selectedTarget.appendChild(targetOption);\n        }\n    });\n    selectedTarget.onchange = function () {\n        vm.setEditingTarget(this.value);\n    };\n\n    // Feedback for stacks and blocks running.\n    vm.on('SCRIPT_GLOW_ON', data => {\n        workspace.glowStack(data.id, true);\n    });\n    vm.on('SCRIPT_GLOW_OFF', data => {\n        workspace.glowStack(data.id, false);\n    });\n    vm.on('BLOCK_GLOW_ON', data => {\n        workspace.glowBlock(data.id, true);\n    });\n    vm.on('BLOCK_GLOW_OFF', data => {\n        workspace.glowBlock(data.id, false);\n    });\n    vm.on('VISUAL_REPORT', data => {\n        workspace.reportValue(data.id, data.value);\n    });\n\n    vm.on('SPRITE_INFO_REPORT', data => {\n        if (data.id !== selectedTarget.value) return; // Not the editingTarget\n        document.getElementById('sinfo-x').value = data.x;\n        document.getElementById('sinfo-y').value = data.y;\n        document.getElementById('sinfo-size').value = data.size;\n        document.getElementById('sinfo-direction').value = data.direction;\n        document.getElementById('sinfo-rotationstyle').value = data.rotationStyle;\n        document.getElementById('sinfo-visible').value = data.visible;\n    });\n\n    document.getElementById('sinfo-post').addEventListener('click', () => {\n        const data = {};\n        data.x = document.getElementById('sinfo-x').value;\n        data.y = document.getElementById('sinfo-y').value;\n        data.direction = document.getElementById('sinfo-direction').value;\n        data.rotationStyle = document.getElementById('sinfo-rotationstyle').value;\n        data.visible = document.getElementById('sinfo-visible').value === 'true';\n        vm.postSpriteInfo(data);\n    });\n\n    // Feed mouse events as VM I/O events.\n    document.addEventListener('mousemove', e => {\n        const rect = canvas.getBoundingClientRect();\n        const coordinates = {\n            x: e.clientX - rect.left,\n            y: e.clientY - rect.top,\n            canvasWidth: rect.width,\n            canvasHeight: rect.height\n        };\n        Scratch.vm.postIOData('mouse', coordinates);\n    });\n    canvas.addEventListener('mousedown', e => {\n        const rect = canvas.getBoundingClientRect();\n        const data = {\n            isDown: true,\n            x: e.clientX - rect.left,\n            y: e.clientY - rect.top,\n            canvasWidth: rect.width,\n            canvasHeight: rect.height\n        };\n        Scratch.vm.postIOData('mouse', data);\n        e.preventDefault();\n    });\n    canvas.addEventListener('mouseup', e => {\n        const rect = canvas.getBoundingClientRect();\n        const data = {\n            isDown: false,\n            x: e.clientX - rect.left,\n            y: e.clientY - rect.top,\n            canvasWidth: rect.width,\n            canvasHeight: rect.height\n        };\n        Scratch.vm.postIOData('mouse', data);\n        e.preventDefault();\n    });\n\n    // Feed keyboard events as VM I/O events.\n    document.addEventListener('keydown', e => {\n        // Don't capture keys intended for Blockly inputs.\n        if (e.target !== document && e.target !== document.body) {\n            return;\n        }\n        Scratch.vm.postIOData('keyboard', {\n            keyCode: e.keyCode,\n            isDown: true\n        });\n        e.preventDefault();\n    });\n    document.addEventListener('keyup', e => {\n        // Always capture up events,\n        // even those that have switched to other targets.\n        Scratch.vm.postIOData('keyboard', {\n            keyCode: e.keyCode,\n            isDown: false\n        });\n        // E.g., prevent scroll.\n        if (e.target !== document && e.target !== document.body) {\n            e.preventDefault();\n        }\n    });\n\n    // Run threads\n    vm.start();\n\n    // Inform VM of animation frames.\n    const animate = function () {\n        stats.update();\n        requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n\n    // Handlers for green flag and stop all.\n    document.getElementById('greenflag').addEventListener('click', () => {\n        vm.greenFlag();\n    });\n    document.getElementById('stopall').addEventListener('click', () => {\n        vm.stopAll();\n    });\n    document.getElementById('turbomode').addEventListener('change', () => {\n        const turboOn = document.getElementById('turbomode').checked;\n        vm.setTurboMode(turboOn);\n    });\n    document.getElementById('compatmode').addEventListener('change',\n        () => {\n            const compatibilityMode = document.getElementById('compatmode').checked;\n            vm.setCompatibilityMode(compatibilityMode);\n        });\n    const tabBlockExplorer = document.getElementById('tab-blockexplorer');\n    const tabThreadExplorer = document.getElementById('tab-threadexplorer');\n    const tabRenderExplorer = document.getElementById('tab-renderexplorer');\n    const tabImportExport = document.getElementById('tab-importexport');\n\n    // Handlers to show different explorers.\n    document.getElementById('threadexplorer-link').addEventListener('click',\n        () => {\n            Scratch.exploreTabOpen = true;\n            getPlaygroundData();\n            tabBlockExplorer.style.display = 'none';\n            tabRenderExplorer.style.display = 'none';\n            tabThreadExplorer.style.display = 'block';\n            tabImportExport.style.display = 'none';\n        });\n    document.getElementById('blockexplorer-link').addEventListener('click',\n        () => {\n            Scratch.exploreTabOpen = true;\n            getPlaygroundData();\n            tabBlockExplorer.style.display = 'block';\n            tabRenderExplorer.style.display = 'none';\n            tabThreadExplorer.style.display = 'none';\n            tabImportExport.style.display = 'none';\n        });\n    document.getElementById('renderexplorer-link').addEventListener('click',\n        () => {\n            Scratch.exploreTabOpen = false;\n            tabBlockExplorer.style.display = 'none';\n            tabRenderExplorer.style.display = 'block';\n            tabThreadExplorer.style.display = 'none';\n            tabImportExport.style.display = 'none';\n        });\n    document.getElementById('importexport-link').addEventListener('click',\n        () => {\n            Scratch.exploreTabOpen = false;\n            tabBlockExplorer.style.display = 'none';\n            tabRenderExplorer.style.display = 'none';\n            tabThreadExplorer.style.display = 'none';\n            tabImportExport.style.display = 'block';\n        });\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClFA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAIA;AACA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAPA;AAksourceRoot":""}